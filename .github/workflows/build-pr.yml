name: build-pr

on:
  pull_request_target:
    types: [labeled]
  pull_request:
    branches:
      - staging
  workflow_dispatch:

permissions: read-all

jobs:
  call_test_cli:
    uses: ./.github/workflows/e2e-cli.yml
   
  call_test_e2e_basic:
    name: "run e2e on basic matrix"
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        KUBERNETES_VERSION: ["1.27.7"]
        GATEKEEPER_VERSION: ["3.15.0"]
    uses: ./.github/workflows/e2e-k8s.yml 
    with:
      k8s_version: ${{ matrix.KUBERNETES_VERSION }}
      gatekeeper_version: ${{ matrix.GATEKEEPER_VERSION }}

  build_test_e2e_full_conditional:
    name: "run e2e on full test matrix with conditions"
    if: contains(github.event.pull_request.labels.*.name, 'safe to test') || github.event_name == 'workflow_dispatch'
    strategy:
      fail-fast: false
      matrix:
        KUBERNETES_VERSION: ["1.26.10", "1.27.7"]
        GATEKEEPER_VERSION: ["3.13.0", "3.14.0", "3.15.0"]
    uses: ./.github/workflows/e2e-k8s.yml 
    with:
      k8s_version: ${{ matrix.KUBERNETES_VERSION }}
      gatekeeper_version: ${{ matrix.GATEKEEPER_VERSION }} 

  build_test_aks_e2e_conditional:
    name: "Build and run e2e Test on AKS with conditions"
    if: contains(github.event.pull_request.labels.*.name, 'safe to test') || github.event_name == 'workflow_dispatch' || github.event_name == 'push'
    permissions:
      id-token: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        KUBERNETES_VERSION: ["1.26.10", "1.27.7"]
        GATEKEEPER_VERSION: ["3.13.0", "3.14.0", "3.15.0"]
    uses: ./.github/workflows/e2e-aks.yml
    with:
      k8s_version: ${{ matrix.KUBERNETES_VERSION }}
      gatekeeper_version: ${{ matrix.GATEKEEPER_VERSION }}
    secrets: inherit
  
  aks-test-cleanup:
    env:
      AZURE_SUBSCRIPTION_ID: daae1e1a-63dc-454f-825d-b39289070f79
      AZURE_CLIENT_ID: 814e6e97-120c-4534-b8a9-f1645bc99500
      AZURE_TENANT_ID: 72f988bf-86f1-41af-91ab-2d7cd011db47
    needs: ['build_test_aks_e2e_conditional']
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - name: Set up Go 1.21
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version: '1.21'

      - name: Az CLI login
        uses: azure/login@6b2456866fc08b011acb422a92a4aa20e2c4de32 # v2.1.0
        with:
          creds: '{"clientId":"${{ env.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ env.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ env.AZURE_TENANT_ID }}"}'

      - name: clean up
        run: |
          make e2e-cleanup AZURE_SUBSCRIPTION_ID=${{ env.AZURE_SUBSCRIPTION_ID }}