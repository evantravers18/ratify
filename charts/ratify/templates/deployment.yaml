{{- $dockerAuthMode := or .Values.dockerConfig .Values.registryCredsSecret -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ratify.fullname" . }}
  labels:
    {{- include "ratify.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "ratify.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ratify.selectorLabels" . | nindent 8 }}
    spec:
      {{- if or .Values.azureWorkloadIdentity.clientId .Values.serviceAccount.create .Values.serviceAccount.name }}
      serviceAccountName: {{ include "ratify.serviceAccountName" . }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "/app/ratify"
          args:
            - "serve"
            - "--http"
            - ":6001"
            - "-c"
            - "/usr/local/ratify/config.json"
          ports:
            - containerPort: 6001
          volumeMounts:
            - mountPath: "/usr/local/ratify-certs/notary"
            {{- if .Values.akvCertConfig.enabled }}
              name: cert-from-akv
            {{- else }}
              name: notary-certs
            {{- end }}
              readOnly: true
            {{- if .Values.cosign.enabled }}
            - mountPath: "/usr/local/ratify-certs/cosign"
              name: cosign-certs
              readOnly: true
            {{- end }}
            - mountPath: "/usr/local/ratify"
              name: config
              readOnly: true
          {{- if $dockerAuthMode }}
            - mountPath: "/usr/local/docker"
              name: dockerconfig
              readOnly: true
          {{- end }}
          env:
          {{- if $dockerAuthMode }}
            - name: DOCKER_CONFIG
              value: "/usr/local/docker"
          {{- end }}
            - name: RATIFY_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: notary-certs
          secret:
            secretName: {{ include "ratify.fullname" . }}-notary-certificate         
        {{- if .Values.cosign.enabled }}
        - name: cosign-certs
          secret:
            secretName: {{ include "ratify.fullname" . }}-cosign-certificate         
        {{- end }}
        {{- if $dockerAuthMode }}
        - name: dockerconfig
          secret:
            {{- if .Values.registryCredsSecret }}
            secretName: {{ .Values.registryCredsSecret }}
            {{- else }}
            secretName: {{ include "ratify.fullname" . }}-dockerconfig
            {{- end }}
            items:
              - key: .dockerconfigjson
                path: config.json
        {{- end }}
        {{- if .Values.akvCertConfig.enabled }}
        - name: cert-from-akv
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "{{ include "ratify.akv.secretProviderClassName" . }}"
        {{- end }}
        - name: config
          configMap:
            name: {{ include "ratify.fullname" . }}-configuration
